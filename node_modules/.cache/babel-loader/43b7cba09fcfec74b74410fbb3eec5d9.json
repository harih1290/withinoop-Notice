{"ast":null,"code":"import _slicedToArray from \"D:\\\\Projects\\\\master\\\\client\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/slicedToArray\";\nimport _taggedTemplateLiteral from \"D:\\\\Projects\\\\master\\\\client\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/taggedTemplateLiteral\";\nvar _templateObject,\n  _jsxFileName = \"D:\\\\Projects\\\\master\\\\client\\\\src\\\\App.js\";\n//import axios from \"axios\";\nimport React, { useState } from \"react\";\n\n//import Post from \"./Post\";\n//const baseURL = \"http://localhost:8081\";\nimport styled from \"styled-components\";\n// Styling a regular HTML input\nvar StyledInput = styled.input(_templateObject || (_templateObject = _taggedTemplateLiteral([\"\\n  display: block;\\n  margin: 20px 0px;\\n  border: 1px solid lightblue;\\n\"])));\n// Creating a custom hook\nfunction useInput(defaultValue) {\n  var _useState = useState(defaultValue),\n    _useState2 = _slicedToArray(_useState, 2),\n    value = _useState2[0],\n    setValue = _useState2[1];\n  function onChange(e) {\n    setValue(e.target.value);\n  }\n  return {\n    value: value,\n    onChange: onChange\n  };\n}\nexport default function App() {\n  // const [post, setPost] = React.useState(null);\n\n  // React.useEffect(() => {\n  //   // axios\n  //   //   .post(`http://localhost:8081/user/generateToken`, { user: \"withinloop\" })\n  //   //   .then((res) => {\n  //   //     console.log(res);\n  //   //     console.log(res.data);\n  //   //     setPost(response.data);\n  //   //   });\n  //   axios.get(baseURL).then((response) => {\n  //     setPost(response.data);\n  //   });\n  // }, []);\n\n  //if (!post) return null;\n\n  // console.log(post);\n  // if (!post) return \"No post!\";\n  var inputProps = useInput();\n  return /*#__PURE__*/React.createElement(\"div\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 46,\n      columnNumber: 5\n    }\n  }, /*#__PURE__*/React.createElement(StyledInput, Object.assign({}, inputProps, {\n    placeholder: \"Type in here\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 47,\n      columnNumber: 7\n    }\n  })), /*#__PURE__*/React.createElement(\"span\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 48,\n      columnNumber: 7\n    }\n  }, \"Value: \", inputProps.value, \" \"), /*#__PURE__*/React.createElement(\"span\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 49,\n      columnNumber: 7\n    }\n  }, \"Value: \", inputProps.onChange, \" \"));\n}","map":{"version":3,"names":["React","useState","styled","StyledInput","input","useInput","defaultValue","value","setValue","onChange","e","target","App","inputProps"],"sources":["D:/Projects/master/client/src/App.js"],"sourcesContent":["//import axios from \"axios\";\nimport React, { useState } from \"react\";\n\n//import Post from \"./Post\";\n//const baseURL = \"http://localhost:8081\";\nimport styled from \"styled-components\";\n// Styling a regular HTML input\nconst StyledInput = styled.input`\n  display: block;\n  margin: 20px 0px;\n  border: 1px solid lightblue;\n`;\n// Creating a custom hook\nfunction useInput(defaultValue) {\n  const [value, setValue] = useState(defaultValue);\n  function onChange(e) {\n    setValue(e.target.value);\n  }\n  return {\n    value,\n    onChange,\n  };\n}\nexport default function App() {\n  // const [post, setPost] = React.useState(null);\n\n  // React.useEffect(() => {\n  //   // axios\n  //   //   .post(`http://localhost:8081/user/generateToken`, { user: \"withinloop\" })\n  //   //   .then((res) => {\n  //   //     console.log(res);\n  //   //     console.log(res.data);\n  //   //     setPost(response.data);\n  //   //   });\n  //   axios.get(baseURL).then((response) => {\n  //     setPost(response.data);\n  //   });\n  // }, []);\n\n  //if (!post) return null;\n\n  // console.log(post);\n  // if (!post) return \"No post!\";\n  const inputProps = useInput();\n  return (\n    <div>\n      <StyledInput {...inputProps} placeholder=\"Type in here\" />\n      <span>Value: {inputProps.value} </span>\n      <span>Value: {inputProps.onChange} </span>\n    </div>\n  );\n}\n"],"mappings":";;;;AAAA;AACA,OAAOA,KAAK,IAAIC,QAAQ,QAAQ,OAAO;;AAEvC;AACA;AACA,OAAOC,MAAM,MAAM,mBAAmB;AACtC;AACA,IAAMC,WAAW,GAAGD,MAAM,CAACE,KAAK,+IAI/B;AACD;AACA,SAASC,QAAQ,CAACC,YAAY,EAAE;EAAA,gBACJL,QAAQ,CAACK,YAAY,CAAC;IAAA;IAAzCC,KAAK;IAAEC,QAAQ;EACtB,SAASC,QAAQ,CAACC,CAAC,EAAE;IACnBF,QAAQ,CAACE,CAAC,CAACC,MAAM,CAACJ,KAAK,CAAC;EAC1B;EACA,OAAO;IACLA,KAAK,EAALA,KAAK;IACLE,QAAQ,EAARA;EACF,CAAC;AACH;AACA,eAAe,SAASG,GAAG,GAAG;EAC5B;;EAEA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;;EAEA;;EAEA;EACA;EACA,IAAMC,UAAU,GAAGR,QAAQ,EAAE;EAC7B,oBACE;IAAA;IAAA;MAAA;MAAA;MAAA;IAAA;EAAA,gBACE,oBAAC,WAAW,oBAAKQ,UAAU;IAAE,WAAW,EAAC,cAAc;IAAA;IAAA;MAAA;MAAA;MAAA;IAAA;EAAA,GAAG,eAC1D;IAAA;IAAA;MAAA;MAAA;MAAA;IAAA;EAAA,cAAcA,UAAU,CAACN,KAAK,MAAS,eACvC;IAAA;IAAA;MAAA;MAAA;MAAA;IAAA;EAAA,cAAcM,UAAU,CAACJ,QAAQ,MAAS,CACtC;AAEV"},"metadata":{},"sourceType":"module"}